{"version":3,"sources":["/Users/robertherber/code/react-native-device-info/example-web/App.tsx","/Users/robertherber/code/react-native-device-info/example-web/web-build/register-service-worker.js"],"names":["styles","StyleSheet","create","surface","margin","maxWidth","title","padding","textAlign","BooleanRow","description","value","Row","Cell","StringRow","Formatter","Intl","NumberFormat","App","useState","freeDisk","setFreeDisk","powerState","setPowerState","totalMemory","setTotalMemory","usedMemory","setUsedMemory","baseOs","setBaseOs","totalDisk","setTotalDisk","locationEnabled","setIsLocationEnabled","cameraPresent","setIsCameraPresent","maxMemory","setMaxMemory","airplaneMode","setAirplaneMode","userAgent","setUserAgent","useEffect","getFreeDiskStorage","then","getPowerState","getTotalMemory","getUsedMemory","getBaseOs","getTotalDiskCapacity","getUserAgent","isCameraPresent","isLocationEnabled","getMaxMemory","isAirplaneMode","useAllSpecs","style","Header","Title","getApplicationName","getVersion","getBuildNumber","isLandscapeSync","isEmulator","format","batteryLevel","Math","round","isBatteryChargingSync","batteryState","lowPowerMode","chargingTime","dischargingTime","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","console"],"mappings":"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","file":"static/js/app.2f39914e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  getBaseOs,\n  getFreeDiskStorage,\n  getMaxMemory,\n  getPowerState,\n  getTotalDiskCapacity,\n  getTotalMemory,\n  getUsedMemory,\n  getUserAgent,\n  isAirplaneMode,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isEmulator,\n  getVersion,\n  isLandscapeSync,\n  getBuildNumber,\n  getApplicationName,\n  isLocationEnabled,\n} from 'react-native-device-info';\nimport { DataTable, Surface, Title } from 'react-native-paper';\n\nconst styles = StyleSheet.create({\n  surface: { margin: 20, maxWidth: 800 },\n  title: { padding: 30, textAlign: 'center' },\n});\n\nconst useAllSpecs = () => {\n  const [freeDisk, setFreeDisk] = useState(null),\n    [powerState, setPowerState] = useState(null),\n    [totalMemory, setTotalMemory] = useState(null),\n    [usedMemory, setUsedMemory] = useState(null),\n    [baseOs, setBaseOs] = useState(null),\n    [totalDisk, setTotalDisk] = useState(null),\n    [locationEnabled, setIsLocationEnabled] = useState(null),\n    [cameraPresent, setIsCameraPresent] = useState(null),\n    [maxMemory, setMaxMemory] = useState(null),\n    [airplaneMode, setAirplaneMode] = useState(null),\n    [userAgent, setUserAgent] = useState(null);\n\n  useEffect(() => {\n    getFreeDiskStorage().then(setFreeDisk);\n    getPowerState().then(setPowerState);\n    getTotalMemory().then(setTotalMemory);\n    getUsedMemory().then(setUsedMemory);\n    getBaseOs().then(setBaseOs);\n    getTotalDiskCapacity().then(setTotalDisk);\n    getUserAgent().then(setUserAgent);\n    isCameraPresent().then(setIsCameraPresent);\n    isLocationEnabled().then(setIsLocationEnabled);\n    getMaxMemory().then(setMaxMemory);\n    isAirplaneMode().then(setAirplaneMode);\n  }, []);\n\n  return {\n    freeDisk,\n    powerState,\n    totalMemory,\n    usedMemory,\n    baseOs,\n    totalDisk,\n    userAgent,\n    cameraPresent,\n    locationEnabled,\n    maxMemory,\n    airplaneMode,\n  };\n};\n\nconst BooleanRow = ({ description, value }: { description: string; value: boolean }) => (\n  <DataTable.Row>\n    <DataTable.Cell>{description}</DataTable.Cell>\n    <DataTable.Cell>{value ? '✅' : '⛔️'}</DataTable.Cell>\n  </DataTable.Row>\n);\n\nconst StringRow = ({ description, value }: { description: string; value: string }) => (\n  <DataTable.Row>\n    <DataTable.Cell>{description}</DataTable.Cell>\n    <DataTable.Cell>{value}</DataTable.Cell>\n  </DataTable.Row>\n);\n\nconst Formatter = new Intl.NumberFormat();\n\nexport default function App() {\n  const {\n    freeDisk,\n    powerState,\n    baseOs,\n    cameraPresent,\n    locationEnabled,\n    totalDisk,\n    usedMemory,\n    totalMemory,\n    userAgent,\n    maxMemory,\n    airplaneMode,\n  } = useAllSpecs();\n\n  return (\n    <>\n      <Title style={styles.title}>react-native-device-info</Title>\n      <Surface style={styles.surface}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Function</DataTable.Title>\n            <DataTable.Title>Output</DataTable.Title>\n          </DataTable.Header>\n          <StringRow description=\"getApplicationName\" value={getApplicationName()} />\n          <StringRow description=\"getVersion\" value={getVersion()} />\n          <StringRow description=\"getBuildNumber\" value={getBuildNumber()} />\n          <BooleanRow description=\"isCameraPresent\" value={cameraPresent} />\n          <BooleanRow description=\"isLocationEnabled\" value={locationEnabled} />\n          <BooleanRow description=\"isLandscape\" value={isLandscapeSync()} />\n          <BooleanRow description=\"isEmulator\" value={isEmulator()} />\n\n          <BooleanRow description=\"isAirplaneMode\" value={airplaneMode} />\n          <StringRow\n            description=\"getUsedMemory / getMaxMemory\"\n            value={Formatter.format(usedMemory) + ' / ' + Formatter.format(maxMemory)}\n          />\n          <StringRow description=\"getTotalMemory\" value={Formatter.format(totalMemory)} />\n          <StringRow\n            description=\"getFreeDiskStorage / getTotalDiskCapacity\"\n            value={Formatter.format(freeDisk) + ' / ' + Formatter.format(totalDisk)}\n          />\n          <StringRow description=\"getUserAgent\" value={userAgent} />\n          <StringRow description=\"getBaseOs\" value={baseOs} />\n          <StringRow\n            description=\"getPowerState().batteryLevel || getBatteryLevel\"\n            value={\n              powerState && powerState.batteryLevel\n                ? Math.round(1000 * powerState.batteryLevel) / 10 + '%'\n                : ''\n            }\n          />\n          <BooleanRow\n            description=\"getPowerState().charging || isBatteryCharging\"\n            value={isBatteryChargingSync()}\n          />\n          <StringRow\n            description=\"getPowerState().batteryState\"\n            value={powerState && powerState.batteryState}\n          />\n          <BooleanRow\n            description=\"getPowerState().lowPowerMode\"\n            value={powerState && powerState.lowPowerMode}\n          />\n          <StringRow\n            description=\"getPowerState().chargingTime\"\n            value={powerState && powerState.chargingTime}\n          />\n          <StringRow\n            description=\"getPowerState().dischargingTime\"\n            value={powerState && powerState.dischargingTime}\n          />\n        </DataTable>\n      </Surface>\n    </>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/react-native-device-info/expo-service-worker.js', { scope: '/react-native-device-info/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}